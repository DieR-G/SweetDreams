{"version":3,"sources":["Assets/candy_logo.svg","Components/PageLogo/PageLogo.jsx","Components/LoginContainer/UsernameInput/UsernameInput.jsx","Components/LoginContainer/PasswordInput/PasswordInput.jsx","Components/LoginContainer/LoginButton/LoginButton.jsx","Services/AuthHelper.js","Components/LoginContainer/AuthError/AuthError.jsx","Contexts/SessionContext.jsx","Components/LoginContainer/LoginContainer.jsx","Static/NotFound.jsx","Static/LoadingScreen.jsx","Services/FetchPostsHelper.js","Static/PostNotExists.jsx","Components/PostViewer/FavToggle/FavToggle.jsx","Components/PostViewer/LikeCounter/LikeCounter.jsx","Components/PostViewer/Content/Content.jsx","Components/PostViewer/CommentBox/Comment/Comment.jsx","Components/PostViewer/CommentBox/CommentInput/CommentInput.jsx","Components/PostViewer/CommentBox/CommentBox.jsx","Components/PostViewer/PostViewer.jsx","Contexts/AdminContext.js","Services/Admin.services.js","Components/Admin/CreateEditForm/CreateForm/CreateForm.jsx","Components/Admin/CreateEditForm/EditForm/EditForm.jsx","Components/Admin/CreateEditForm/CreateEditForm.jsx","Components/Admin/Header/Header.jsx","Components/Button/Button.jsx","Components/Admin/PostViewer/PaginationButton/PaginationButton.jsx","Components/Admin/PostViewer/Post/ActivatePost/ActivatePost.jsx","Components/Admin/PostViewer/Post/DeactivePost/DeactivePost.jsx","Components/Admin/PostViewer/Post/Post.jsx","Components/Admin/PostViewer/SearchBar/SearchBar.jsx","Components/Admin/PostViewer/PostViewer.jsx","Components/Admin/Admin.jsx","Components/Container/Card/Card.jsx","Services/utilites.js","Services/posts.services.js","Assets/Search.svg","Components/Container/SearchBar/SearchBar.jsx","Components/Container/Menu/Menu.jsx","Components/Container/Container.jsx","Components/Container/ContainerMobile.jsx","CustomHooks/InfiniteLoading.jsx","Components/Container/Favorites/Favorites.jsx","CustomHooks/ResizeHook.jsx","Components/Crossroad/Crossroad.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageLogo","props","className","src","candyLogo","alt","fontColor","UsernameInput","required","type","id","name","placeholder","PasswordInput","LoginButton","onClick","clickHandler","AuthHelper","login","e","a","preventDefault","loginStatus","loginForm","FormData","document","querySelector","fetch","method","headers","body","get","request","json","response","ok","logged","token","localStorage","setItem","JSON","stringify","whoami","userInfo","found","username","role","withCredentials","Authorization","AuthError","message","errorMsg","constructor","Array","msg","search","push","SessionContext","createContext","LoginContainer","useState","loginFailed","setloginFailed","errorInfo","setErrorInfo","useContext","authenticated","setAuthenticated","navigate","useNavigate","newSession","useEffect","handleClick","status","err","statusError","NotFound","LoadingScreen","FetchPostsHelper","getPost","fetched","getFavorites","PostNotExists","to","FavToggle","normalStyle","favUrl","postId","favIcon","setFavIcon","favorites","favs","setFavs","faved","setFaved","favStyle","setFavStyle","favNone","favClick","tempFavs","filter","item","console","log","onMouseEnter","onMouseLeave","LikeCounter","likes","setLikes","likeIcon","setLikeIcon","likeStyle","setLikeStyle","liked","setLiked","likeUrl","noneFunction","likeClick","temp","loggedUser","length","Content","currentPost","createdDate","Date","createdAt","title","toLocaleDateString","description","user","Comment","undefined","comment","CommentInput","rows","commentFunction","CommentBox","commentUrl","comments","setComments","incorrectFormat","setIncorrectFormat","postButtonClick","inputBox","value","currentUser","newComments","_id","badInput","map","PostViewer","useParams","postLoaded","setPostLoaded","content","setContent","loading","returnHome","post","image","AdminContext","AdminProvider","formState","setFormState","postState","setPostState","helpMessage","setHelpMessage","setPostId","page","setPage","providerValue","clear","setClear","Provider","children","useAdminContext","context","Error","BASE_URL","useAdminServices","tempLogin","config","data","error","getAdminPosts","limit","getOnePost","createPost","toggleActive","updatePost","CreateForm","setData","handleInputChange","target","resetAll","reset","htmlFor","onChange","cols","allOk","helpMessageContainer","trim","classList","remove","setTimeout","add","EditForm","getAPost","newData","editPost","CreateEditForm","Header","emptySession","Button","localStyle","text","background","ref","style","backgroundImage","PaginationButton","actionText","onPagination","ActivatePost","DeactivePost","showHelpMessage","Post","active","getTime","SearchBar","searchFunction","clearFunction","setSearch","searchPost","searchText","setter","flagPage","loginInfo","some","searchedPost","validateFormStatus","adminPosts","setAdminPosts","fetchAdminPosts","newPage","Admin","Card","homePost","postInfo","services","getPosts","simplyfiedData","pages","favPosts","i","SetSearch","postsServices","action","SearchIcon","Menu","fav","logOut","Container","posts","SetPosts","SetPage","SetClear","changeOffset","amount","sign","prevItems","getter","getItems","items","SetItems","pageToLoad","useRef","initialPageLoaded","hasMore","SetHasMore","rendered","SetRendered","loadItems","actualPage","current","isArray","loadNext","Number","observe","useInView","onEnter","loadMoreRef","useInfiniteLoading","Favorites","useResize","window","innerWidth","width","SetWidth","innerHeight","height","SetHeight","addEventListener","removeEventListener","Crossroad","redirect","App","parse","exact","path","element","ContainerMobile","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c9c2319.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/candy_logo.c6b15da6.svg\";","import candyLogo from \"../../Assets/candy_logo.svg\";\r\n\r\nfunction PageLogo(props) {\r\n  return (\r\n    <div className=\"flex md:w-80 md:h64 w64 h-32 justify-evenly items-center mt-4 md:mt-10\">\r\n      <div className=\"md:h-32 md:w-32 h-24 w-24\">\r\n        <img src={candyLogo} alt=\"\"></img>\r\n      </div>\r\n      <div className=\"md:w-40 w-32 h-24\">\r\n        <p\r\n          className={`font-styled md:text-5xl text-4xl ${props.fontColor} text-center`}\r\n        >\r\n          Sweet Dreams\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageLogo;\r\n","import { FaUserAlt } from \"react-icons/fa\";\r\nfunction UsernameInput(props) {\r\n  return (\r\n    <div className=\"focus-within:ring-2 ring-gray-700 flex items-center bg-gray-200 w-full h-10 p-4 rounded-xl\">\r\n      <FaUserAlt />\r\n      <input\r\n        required={true}\r\n        className=\"ml-4 font-round text-lg outline-none bg-gray-200 w-11/12\"\r\n        type=\"text\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        placeholder=\"Username\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsernameInput;\r\n","import { RiLockPasswordFill } from \"react-icons/ri\";\r\n\r\nfunction PasswordInput(props) {\r\n  return (\r\n    <div className=\"focus-within:ring-2 ring-gray-700 flex items-center bg-gray-200 w-full h-10 p-4 rounded-xl\">\r\n      <RiLockPasswordFill />\r\n      <input\r\n        className=\"ml-4 font-round text-lg outline-none bg-gray-200 w-11/12\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordInput;\r\n","function LoginButton(props) {\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      <button\r\n        type=\"submit\"\r\n        onClick={props.clickHandler}\r\n        className=\"cursor-pointer w-28 h-12 bg-lightgreen hover:bg-darkgreen rounded-2xl\"\r\n      >\r\n        <label className=\"cursor-pointer font-bold font-normal text-xl text-white\">\r\n          Login\r\n        </label>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginButton;\r\n","const AuthHelper = {};\r\n\r\nconst authUrl = \"https://posts-pw2021.herokuapp.com/api/v1/auth/signin\";\r\n\r\nconst whoamiUrl = \"https://posts-pw2021.herokuapp.com/api/v1/auth/whoami\";\r\n\r\nAuthHelper.login = async (e) => {\r\n  e.preventDefault();\r\n  let loginStatus = {};\r\n  let loginForm = new FormData(document.querySelector(\"#loginForm\"));\r\n  let request = await fetch(authUrl, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: `username=${loginForm.get(\"username\")}&password=${loginForm.get(\r\n      \"password\"\r\n    )}`,\r\n  });\r\n  let response = await request.json();\r\n  if (request.ok) {\r\n    loginStatus = { logged: true, token: response.token };\r\n    localStorage.setItem(\"login\", JSON.stringify(loginStatus));\r\n  } else {\r\n    loginStatus.logged = false;\r\n    loginStatus.body = response;\r\n  }\r\n\r\n  return loginStatus;\r\n};\r\n\r\nAuthHelper.whoami = async (token) => {\r\n  let userInfo = { found: false, username: \"\", role: \"\" };\r\n  let request = await fetch(\r\n    whoamiUrl,\r\n    {\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    }\r\n  );\r\n  let response = await request.json();\r\n  //if request is not ok the token probably expired\r\n  if (request.ok) {\r\n    userInfo = { found: true, ...response };\r\n  } else {\r\n    userInfo = { found: false };\r\n  }\r\n\r\n  return userInfo;\r\n};\r\n\r\nexport default AuthHelper;\r\n","export default function AuthError(props) {\r\n  let message = [];\r\n  if (props.errorMsg.constructor === Array) {\r\n    for (let msg of props.errorMsg) {\r\n      if (msg.search(\"user\") !== -1) {\r\n        message.push(<p>Username cannot be empty</p>);\r\n      }\r\n      if (msg.search(\"pass\") !== -1) {\r\n        message.push(<p>Password cannot be empty</p>);\r\n      }\r\n    }\r\n  } else {\r\n    if (props.errorMsg.search(\"User\") !== -1) {\r\n      message.push(<p>Please check the username</p>);\r\n    } else if (props.errorMsg.search(\"Pass\") !== -1) {\r\n      message.push(<p>Please check the password</p>);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"w-full font-normal text-red-500 font-semibold text-lg break-all flex flex-col gap-5 text-center\">\r\n      {message}\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst SessionContext = createContext();\r\n\r\nexport default SessionContext;\r\n","import PageLogo from \"../PageLogo/PageLogo\";\r\nimport UsernameInput from \"./UsernameInput/UsernameInput\";\r\nimport PasswordInput from \"./PasswordInput/PasswordInput\";\r\nimport LoginButton from \"./LoginButton/LoginButton\";\r\nimport AuthHelper from \"../../Services/AuthHelper\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport AuthError from \"./AuthError/AuthError\";\r\nimport SessionContext from \"../../Contexts/SessionContext\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction LoginContainer(props) {\r\n  const [loginFailed, setloginFailed] = useState(false);\r\n  const [errorInfo, setErrorInfo] = useState(<div className=\"hidden\"></div>); //invisible component when there is no error state\r\n\r\n  const { authenticated, setAuthenticated } = useContext(SessionContext);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  let newSession = {};\r\n\r\n  useEffect(() => {\r\n    if(authenticated.logged){\r\n      navigate('/home');\r\n    }\r\n  }, [loginFailed]);\r\n\r\n  const handleClick = async (e) => {\r\n    let status = await AuthHelper.login(e);\r\n    if (!status.logged) {\r\n      setloginFailed(true);\r\n      let statusError;\r\n      for (let err in status.body) {\r\n        statusError = status.body[err];\r\n      }\r\n      setErrorInfo(<AuthError errorMsg={statusError} />);\r\n    } else {\r\n      newSession = {\r\n        logged: true,\r\n        token: status.token,\r\n      };\r\n      setAuthenticated(newSession);\r\n      setloginFailed(!loginFailed);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen w-screen min-w-full bg-loginpattern bg-no-repeat bg-cover flex items-center justify-center overflow-y-scroll min-h-600\">\r\n      <div className=\"xl:w-4/12 flex-grow-0 w-11/12 pt-2 pb-14 bg-white rounded-2xl flex items-center flex-col justify-start\">\r\n        <div className=\"md:mb-10 mb-4\">\r\n          <PageLogo />\r\n        </div>\r\n        <form className=\"flex flex-col md:w-4/6 sm:w-5/6 gap-10\" id=\"loginForm\">\r\n          <UsernameInput />\r\n          <PasswordInput />\r\n          {errorInfo}\r\n          <LoginButton clickHandler={handleClick} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport { GiPlug } from \"react-icons/gi\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function NotFound() {\r\n  let navigate = useNavigate();\r\n  const handleGoBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen min-w-full flex justify-center bg-gray-100 items-center\">\r\n      <div>\r\n        <div className=\"flex justify-around items-center text-6xl flex-col font-normal lg:text-9xl font-bold gap-x-1 lg:gap-x-10 mb-10 text-gray-900\">\r\n          <div>\r\n            <GiPlug />\r\n          </div>\r\n          <div>\r\n            <h1>404</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-full flex flex-col gap-y-5 items-center\">\r\n          <div>\r\n            <h2 className=\"text-4xl font-bold font-round\">Not found!</h2>\r\n          </div>\r\n          <div>\r\n            <p className=\"text-lg md:text-2xl\">\r\n              Sorry, we couldn't find the requested page\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <button\r\n              onClick={handleGoBack}\r\n              className=\"bg-purple-600 hover:bg-purple-700 text-gray-100 w-24 h-10 rounded-xl font-semibold\"\r\n            >\r\n              Go home\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { GiWrappedSweet } from \"react-icons/gi\";\r\n\r\nfunction LoadingScreen() {\r\n  return (\r\n    <div className=\"w-full h-screen flex justify-center items-center\">\r\n      <div className=\"text-5xl xl:text-7xl font-semibold flex gap-x-5 text-purple-700\">\r\n        <GiWrappedSweet className=\"animate-spin\" />\r\n        <p>Loading</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","const FetchPostsHelper = {};\r\n\r\nconst fetchOneUrl = \"https://posts-pw2021.herokuapp.com/api/v1/post/one/\";\r\n\r\nconst favoriteUrl = \"https://posts-pw2021.herokuapp.com/api/v1/post/fav\";\r\n\r\nFetchPostsHelper.getPost = async (id, token) => {\r\n    let request = await fetch(fetchOneUrl+id, {\r\n        method: \"GET\",\r\n        withCredentials: true,\r\n        \r\n        headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if(request.ok){\r\n        let response = await request.json();\r\n        return { fetched: true, ...response };\r\n    }\r\n    else{\r\n        return { fetched: false };\r\n    }\r\n}\r\n\r\nFetchPostsHelper.getFavorites = async (token) =>{\r\n    let request = await fetch(favoriteUrl, {\r\n        method: \"GET\",\r\n        withCredentials: true,\r\n        \r\n        headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    if(request.ok){\r\n        let response = await request.json();\r\n        return {fetched: true, ...response};\r\n    }\r\n    else{\r\n        return {fetched: false};\r\n    }\r\n};\r\n\r\nexport default FetchPostsHelper;","import { Link } from \"react-router-dom\";\r\nimport { CgSmileSad } from \"react-icons/cg\";\r\nimport {FaHome} from 'react-icons/fa';\r\nfunction PostNotExists() {\r\n  return (\r\n    <div className=\"w-full h-screen flex justify-center items-center flex-col bg-gray-100\">\r\n      <div className=\"text-9xl text-indigo-600 mb-10\">\r\n        <CgSmileSad />\r\n      </div>\r\n      <div className=\"font-round xl:text-2xl font-semibold\">\r\n        <p>Sorry, the requested post does not exist</p>\r\n        <Link to=\"/home\" className=\"flex gap-x-3 underline text-gray-600 justify-center text-lg mt-3 items-center\"><FaHome/> Go back home</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostNotExists;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AiOutlineStar, AiFillStar } from \"react-icons/ai\";\r\nimport SessionContext from \"../../../Contexts/SessionContext\";\r\nfunction FavToggle(props) {\r\n  const favedStyle = \"text-2xl text-yellow-500\";\r\n  const normalStyle = \"text-2xl text-black\";\r\n  const favUrl = `https://posts-pw2021.herokuapp.com/api/v1/post/fav/${props.postId}`;\r\n  const [favIcon, setFavIcon] = useState(<AiOutlineStar />);\r\n  const [favs, setFavs] = useState(props.favorites);\r\n  const [faved, setFaved] = useState(false);\r\n  const [favStyle, setFavStyle] = useState(normalStyle);\r\n  const { authenticated } = useContext(SessionContext);\r\n  const favHover = () => {\r\n    setFavIcon(<AiFillStar />);\r\n  };\r\n  const favLeave = () => {\r\n    setFavIcon(<AiOutlineStar />);\r\n  };\r\n  const favNone = () => {};\r\n  const favClick = async () => {\r\n    let request = await fetch(favUrl, {\r\n      method: \"PATCH\",\r\n      withCredentials: true,\r\n      headers: { Authorization: `Bearer ${authenticated.token}` },\r\n    });\r\n    if(request.ok){\r\n        let tempFavs = favs;\r\n        if(!faved){\r\n            tempFavs.push(props.postId);\r\n            setFavs(tempFavs);\r\n            setFaved(true);\r\n        }\r\n        else{\r\n            tempFavs = tempFavs.filter(item => {return item !== props.postId});\r\n            setFavs(tempFavs);\r\n            setFaved(false);\r\n        }\r\n    }\r\n  };\r\n   useEffect(()=>{\r\n       console.log(favs);\r\n       for(let f of favs){\r\n           if(f === props.postId){\r\n               setFaved(true);\r\n               setFavStyle(favedStyle);\r\n               setFavIcon(<AiFillStar />);\r\n           }\r\n       }\r\n       if(!faved){\r\n           setFavStyle(normalStyle);\r\n           setFavIcon(<AiOutlineStar />);\r\n       }\r\n   },[faved]);\r\n  return (\r\n    <div className=\"flex justify-center flex-col items-center\">\r\n      <button\r\n        onMouseEnter={faved ? favNone : favHover}\r\n        onMouseLeave={faved ? favNone : favLeave}\r\n        onClick={favClick}\r\n        className={favStyle}\r\n      >\r\n        {favIcon}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavToggle;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\r\nimport SessionContext from \"../../../Contexts/SessionContext\";\r\n\r\nfunction LikeCounter(props) {\r\n  const [likes, setLikes] = useState(props.likes);\r\n  const [likeIcon, setLikeIcon] = useState(<AiOutlineHeart />);\r\n  const [likeStyle, setLikeStyle] = useState(\"text-xl\");\r\n  const [liked, setLiked] = useState(false);\r\n  const likeUrl =\r\n    \"https://posts-pw2021.herokuapp.com/api/v1/post/like/\" + props.postId;\r\n  const likedStyle = \"text-xl text-red-500\";\r\n  const normalStyle = \"text-xl text-black\";\r\n  const { authenticated } = useContext(SessionContext);\r\n  const likeHover = () => {\r\n    setLikeIcon(<AiFillHeart />);\r\n  };\r\n  const likeLeave = () => {\r\n    setLikeIcon(<AiOutlineHeart />);\r\n  };\r\n  const noneFunction = () => {};\r\n\r\n  const likeClick = async (e) => {\r\n    let request = await fetch(likeUrl, {\r\n      method: \"PATCH\",\r\n      withCredentials: true,\r\n      headers: { Authorization: `Bearer ${authenticated.token}` },\r\n    });\r\n    if(request.ok){\r\n        let temp = likes;\r\n        if(!liked){\r\n            temp.push({username:props.loggedUser.username});\r\n            setLikes(temp);\r\n            setLiked(true);\r\n        }   \r\n        else{\r\n            temp = temp.filter((item)=>{return item.username !== props.loggedUser.username});\r\n            setLikes(temp);\r\n            setLiked(false);\r\n        }\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    for (let usr of likes) {\r\n      if (usr.username === props.loggedUser.username) {\r\n        setLiked(true);\r\n        setLikeStyle(likedStyle);\r\n        setLikeIcon(<AiFillHeart />);\r\n      }\r\n    }\r\n    if (!liked) {\r\n      setLikeStyle(normalStyle);\r\n      setLikeIcon(<AiOutlineHeart />);\r\n      console.log(\"now should have hover\");\r\n    }\r\n  }, [liked]);\r\n  return (\r\n    <div className=\"flex items-center gap-x-3\">\r\n      <button\r\n        className={likeStyle}\r\n        onMouseEnter={liked?noneFunction:likeHover}\r\n        onMouseLeave={liked?noneFunction:likeLeave}\r\n        onClick={likeClick}\r\n      >\r\n        {likeIcon}\r\n      </button>\r\n      <div>\r\n        <p className=\"font-semibold font-normal text-lg\">{likes.length}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LikeCounter;\r\n","import FavToggle from \"../FavToggle/FavToggle\";\r\nimport LikeCounter from \"../LikeCounter/LikeCounter\";\r\n\r\nfunction Content(props) {\r\n  const currentPost = props.currentPost;\r\n  const createdDate = new Date(currentPost.createdAt);\r\n  return (\r\n    <div className=\"shadow border border-gray-200 bg-white rounded-md w-full flex md:justify-around flex-col-reverse justify-end md:flex-row\">\r\n      <div className=\"md:w-3/4 py-5 px-7\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"pr-2 border-r border-gray-400 w-8/12 md:w-auto\">\r\n            <h2 className=\"font-bold text-gray-800 font-round text-lg break-words\">\r\n              {currentPost.title}\r\n            </h2>\r\n          </div>\r\n          <div className=\"ml-2\">\r\n            <p className=\"font-medium text-gray-400\">Created: {createdDate.toLocaleDateString(\"short\")}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4 w-full\">\r\n          <p>{currentPost.description}</p>\r\n          <p className=\"text-sm font-light text-gray-300 mt-3\">Post by: {currentPost.user.username}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"md:w-1/4 h-full flex justify-evenly items-center mt-3 md:mt-0\">\r\n        <LikeCounter postId={props.postId} loggedUser={props.loggedUser} likes={currentPost.likes} />\r\n        <FavToggle favorites={props.favorites} postId={props.postId} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","function Comment(props) {\r\n  const username = props.comment.user !== undefined? props.comment.user.username: 'someone';\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div>\r\n        <span className=\"font-round font-semibold\">{username} said:</span>\r\n      </div>\r\n      <div className=\"border-l-2 border-gray-700 ml-2 pl-3 mt-1\">\r\n        <p className=\"break-words\">{props.comment.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\n\r\nfunction CommentInput(props) {\r\n  return (\r\n    <div className=\"w-full flex lg:gap-x-3 lg:gap-y-0 gap-y-4 text-sm md:text-lg flex-col lg:flex-row items-center\">\r\n      <div className=\"w-full bg-gray-300 rounded-2xl flex  justify-center\">\r\n        <textarea\r\n          className=\"w-11/12 resize-none bg-transparent font-round my-3 outline-none\"\r\n          name=\"comment\"\r\n          id=\"comment\"\r\n          rows=\"2\"\r\n          placeholder=\"Leave a comment...\"\r\n        ></textarea>\r\n      </div>\r\n      <button onClick={props.commentFunction} className=\"bg-lightgreen hover:bg-darkgreen text-white font-round font-bold px-3 py-2 rounded-xl w-5/12 sm:w-4/12 md:w-auto lg:text-sm lg:py-2 lg:px-4\">\r\n        Respond\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentInput;\r\n","import React, { useContext, useState } from \"react\";\r\nimport SessionContext from \"../../../Contexts/SessionContext\";\r\nimport AuthHelper from \"../../../Services/AuthHelper\";\r\nimport Comment from \"./Comment/Comment\";\r\nimport CommentInput from \"./CommentInput/CommentInput\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nfunction CommentBox(props) {\r\n  const commentUrl = `https://posts-pw2021.herokuapp.com/api/v1/post/comment/${props.postId}`;\r\n  const [comments, setComments] = useState(props.comments);\r\n  const [incorrectFormat, setIncorrectFormat] = useState(false);\r\n  //const [postedComment, setPostedComment] = useState(false);\r\n  const { authenticated } = useContext(SessionContext);\r\n  let navigate = useNavigate()\r\n  const postButtonClick = async () => {\r\n    let inputBox = document.querySelector(\"#comment\");\r\n    if (inputBox.value.length < 8) {\r\n      setIncorrectFormat(true);\r\n    } else {\r\n      let currentUser = await AuthHelper.whoami(authenticated.token);\r\n      if (currentUser.found) {\r\n        let newComments = [\r\n          ...comments,\r\n          {\r\n            description: inputBox.value,\r\n            user: { username: currentUser.username },\r\n            _id: `${inputBox.value}saloftheearth`,\r\n          },\r\n        ];\r\n        let request = await fetch(commentUrl, {\r\n          method: \"PATCH\",\r\n          withCredentials: true,\r\n          headers: { Authorization: `Bearer ${authenticated.token}`, \"Content-Type\": \"application/x-www-form-urlencoded\" },\r\n          body: `description=${inputBox.value}`\r\n        });\r\n        if (request.ok) {\r\n          inputBox.value = \"\";\r\n          setComments(newComments);\r\n          setIncorrectFormat(false);\r\n        }\r\n        else{\r\n            navigate(\"/home\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n  let badInput = (\r\n    <p className=\" text-red-500 text-sm\">\r\n      Comments must have at least 8 characters\r\n    </p>\r\n  );\r\n  return (\r\n    <div className=\"w-full rounded-xl bg-white flex flex-col py-5 px-3 md:px-7 gap-y-2\">\r\n      <div className=\"ml-2\">\r\n        <span className=\"font-styled text-xl font-medium\">Comments</span>\r\n      </div>\r\n      <div>\r\n        <CommentInput commentFunction={postButtonClick} />\r\n      </div>\r\n      {incorrectFormat ? badInput : <></>}\r\n      <hr className=\"border-1 border-gray-400 mt-2\" />\r\n      <div className=\"flex flex-col gap-y-4\">\r\n        {comments.map((item) => {\r\n          return <Comment key={item._id} comment={item} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentBox;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport SessionContext from \"../../Contexts/SessionContext\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport LoadingScreen from \"../../Static/LoadingScreen\";\r\nimport FetchPostsHelper from \"../../Services/FetchPostsHelper\";\r\nimport PostNotExists from \"../../Static/PostNotExists\";\r\nimport { BsArrowLeftShort } from \"react-icons/bs\";\r\nimport Content from \"./Content/Content\";\r\nimport AuthHelper from \"../../Services/AuthHelper\";\r\nimport CommentBox from \"./CommentBox/CommentBox\"\r\n\r\nfunction PostViewer(props) {\r\n  let { id } = useParams();\r\n  const [postLoaded, setPostLoaded] = useState(false);\r\n  const [content, setContent] = useState(<div></div>);\r\n  const loading = <LoadingScreen />;\r\n  const { authenticated } = useContext(SessionContext);\r\n  let navigate = useNavigate();\r\n  const returnHome = ()=>{\r\n    navigate(\"/home\");\r\n  }\r\n  useEffect(() => {\r\n    if (!authenticated.logged) {\r\n      navigate(\"/\");\r\n    } else {\r\n      if (!postLoaded) {\r\n        (async function () {\r\n          let post = await FetchPostsHelper.getPost(id, authenticated.token);\r\n          let user = await AuthHelper.whoami(authenticated.token);\r\n          let favs = await FetchPostsHelper.getFavorites(authenticated.token);\r\n          if (post.fetched && favs.fetched) {\r\n            setContent(\r\n              <div className=\"w-full min-h-screen flex justify-center bg-loginpattern pb-6\">\r\n                <div className=\"xl:w-2/5 w-10/12 mt-4 flex flex-col gap-y-5\">\r\n                  <div>\r\n                    <button onClick={returnHome} className=\"absolute hover:bg-white rounded-full border-2 border-white ml-4 mt-3 text-white text-2xl hover:text-black text-center hover:border-0\">\r\n                      <BsArrowLeftShort />\r\n                    </button>\r\n                    <div>\r\n                      <img className=\"w-full rounded-lg\" src={post.image} alt=\"post\"></img>\r\n                    </div>\r\n                  </div>\r\n                  <Content postId={id} loggedUser={user} currentPost={post} favorites={favs.favorites}/>\r\n                  <CommentBox comments={post.comments} postId={id} />\r\n                </div>\r\n              </div>\r\n            );\r\n          } else {\r\n            setContent(<PostNotExists />);\r\n          }\r\n          setPostLoaded(true);\r\n        })();\r\n      }\r\n    }\r\n  }, [postLoaded]);\r\n\r\n  return <>{postLoaded ? content : loading}</>;\r\n}\r\n\r\nexport default PostViewer;\r\n","import {\r\n    createContext,\r\n    useContext,\r\n    useState,\r\n} from 'react';\r\n\r\nconst AdminContext = createContext();\r\n\r\nexport const AdminProvider = ( props ) => {\r\n    const [ formState, setFormState ] = useState( 'create' );\r\n    const [ postState, setPostState ] = useState(0);\r\n    const [ helpMessage, setHelpMessage ] = useState('Hola');\r\n    const [ postId, setPostId ] = useState(undefined);\r\n    const [ page, setPage ] = useState(0);\r\n    const [ clear, setClear ] = useState(false);\r\n\r\n    const providerValue = {\r\n        formState: formState,\r\n        setFormState: setFormState,\r\n        postState: postState,\r\n        setPostState: setPostState,\r\n        helpMessage: helpMessage,\r\n        setHelpMessage: setHelpMessage,\r\n        postId: postId,\r\n        setPostId: setPostId,\r\n        page: page,\r\n        setPage: setPage,\r\n        clear: clear,\r\n        setClear: setClear,\r\n    }\r\n        \r\n    return (\r\n        <AdminContext.Provider value={ providerValue }>\r\n            { props.children }\r\n        </AdminContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useAdminContext = () => {\r\n    const context = useContext( AdminContext );\r\n\r\n    if( !context ) {\r\n        throw new Error( 'No estás dentro del Admin Context' );\r\n    }\r\n\r\n    return context;\r\n}","const BASE_URL = 'https://posts-pw2021.herokuapp.com/api/v1';\r\n\r\nexport const useAdminServices = {\r\n    tempLogin: async () => {\r\n        try {\r\n            // definition of request's config\r\n            const config = {\r\n                headers: {\r\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                },\r\n                method: \"POST\",\r\n                body: \"username=gp30_admin&password=QNnbLKHxVe7ktNog\",\r\n            }\r\n\r\n            const response = await fetch( `${BASE_URL}/auth/signin`, config );\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            return {};\r\n        }\r\n    },\r\n\r\n    getAdminPosts: async ( token, limit = 10, page = 0 ) => {\r\n        try {\r\n            // definition of request's config\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                method: \"GET\",\r\n            }\r\n\r\n            // getting the owned posts from the api\r\n            const response = await fetch( `${BASE_URL}/post/owned?limit=${limit}&page=${page}`, config );\r\n    \r\n            // chekgin if response returned withoud problems\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    },\r\n\r\n    getOnePost: async ( token, id ) => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                method: \"GET\",\r\n            }\r\n\r\n            const response = await fetch( `${BASE_URL}/post/one/${id}`, config );\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    },\r\n\r\n    createPost: async ( token, title, description, image ) => {\r\n        try {\r\n            // definition of request's config\r\n            const config = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({ title: title, description: description, image: image }),\r\n            }\r\n\r\n            // making the request to the api\r\n            const response = await fetch( `${BASE_URL}/post/create`, config );\r\n    \r\n            // chekgin if response returned withoud problems\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    },\r\n\r\n    toggleActive: async ( token, id ) => {\r\n        try {\r\n            // definition of request's config\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                method: \"PATCH\",\r\n            }\r\n\r\n            const response = await fetch( `${BASE_URL}/post/toggle/${id}`, config );\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    },\r\n\r\n    updatePost: async ( token, id, title, description, image ) => {\r\n        try {\r\n            const config = {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify({ title: title, description: description, image: image }),\r\n            }\r\n\r\n            const response = await fetch( `${BASE_URL}/post/update/${id}`, config );\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                return data;\r\n            }\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    } \r\n}","import React, { useState, useContext } from 'react';\r\nimport { useAdminContext } from '../../../../Contexts/AdminContext';\r\nimport { useAdminServices } from '../../../../Services/Admin.services';\r\nimport SessionContext from '../../../../Contexts/SessionContext';\r\nconst CreateForm = () => {\r\n    const { helpMessage, setHelpMessage } = useAdminContext();\r\n    const { authenticated } = useContext(SessionContext);\r\n    const [ data, setData ] = useState({\r\n        title: '',\r\n        description: '',\r\n        image: '',\r\n    });\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setData({\r\n            ...data, [ e.target.name ]: e.target.value\r\n        });\r\n    }\r\n\r\n    const resetAll = ( e ) => {\r\n        e.preventDefault();\r\n        e.target.reset();\r\n        setData({\r\n            title: '',\r\n            description: '',\r\n            image: '',\r\n        });\r\n    }\r\n\r\n    const clearForm = ( e ) => {\r\n        e.preventDefault();\r\n        document.querySelector('#create-form').reset();\r\n        setData({\r\n            title: '',\r\n            description: '',\r\n            image: '',\r\n        });\r\n    }\r\n\r\n    const validateData = ( e ) => {\r\n        let allOk = true;\r\n\r\n        const { title, description, image } = { ...data };\r\n\r\n        const helpMessageContainer = document.querySelector('#help-message');\r\n        \r\n        if ( title.trim() === '' ) {\r\n            setHelpMessage( 'Debes ingresar un titulo' ); \r\n            allOk = false;\r\n            \r\n            \r\n        } else if ( description.trim() === '' ) {\r\n            setHelpMessage( 'Debes ingresar una descripción' );\r\n            allOk = false;\r\n\r\n            \r\n        } else if ( image.trim() === '' ) {\r\n            setHelpMessage( 'Debes ingresar una URL como imagen' ); \r\n            allOk = false;\r\n        } else {\r\n            if( title.trim().length < 8 || title.trim().length > 32) {\r\n                setHelpMessage( 'El titulo debe tener entre 8 y 32 caracteres' );\r\n                allOk = false;\r\n            } else if ( description.length < 8 ) {\r\n                setHelpMessage( 'La descripción debe tener como mínimo 8 caracteres' );\r\n                allOk = false;\r\n            }\r\n        }\r\n\r\n        if ( allOk ) {\r\n            createPost( title, description, image );\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n            helpMessageContainer.classList.remove('hidden');\r\n\r\n            setTimeout(() => {\r\n                helpMessageContainer.classList.add('hidden');\r\n            }, 3500);\r\n        }\r\n    }\r\n\r\n    const createPost = async ( title, description, image ) => {\r\n        try {\r\n            const token = authenticated.token;\r\n\r\n            const response = await useAdminServices.createPost( token, title, description, image );\r\n\r\n            if( response ) {\r\n                console.log( response );\r\n                resetAll();\r\n            } else {\r\n                console.log('Ha ocurrido un error');\r\n            }       \r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='bg-purple-700 flex flex-col items-center w-full min-h-690 md:w-1/2 md:h-screen'>\r\n            <form id='create-form' className='bg-gray-100 flex flex-col mt-5 p-5 rounded-lg w-4/5'>\r\n                <h2 className='font-normal font-bold text-center text-3xl'>Create post</h2>\r\n\r\n                <label htmlFor='title-input' className='mt-2'>Title</label>\r\n                <input \r\n                    type='text' \r\n                    id='title-input' \r\n                    name='title' \r\n                    placeholder='f.e. The benefits of exercise' \r\n                    className='border-2 border-gray-300 mt-1 px-3 py-1 rounded' \r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <label htmlFor='description-text-area' className='mt-4'>Description</label>\r\n                <textarea \r\n                    id='description-text-area' \r\n                    name='description' \r\n                    cols='40' \r\n                    rows='5' \r\n                    placeholder='f.e. The health benefits of regular physical activity and exercise cannot be ignored. Everyone benefits from exercise, regardless of age, gender, or physical ability' \r\n                    className='border-2 border-gray-300 mt-1 px-3 py-1 rounded'\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <label htmlFor='image-input' className='mt-4'>Image</label>\r\n                <input \r\n                    type='text' \r\n                    id='image-input' \r\n                    name='image' \r\n                    placeholder='f.e. https://health.clevelandclinic.org/wp-content/uploads/sites/3/2013/09/inexpensiveExercise-1277759983-770x533-1.jpg' \r\n                    className='border-2 border-gray-300 mt-1 px-3 py-1 rounded'\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <div className='flex flex-col justify-evenly w-full mt-2 lg:flex-row'>\r\n                    <button \r\n                        id='clear-all' \r\n                        className='bg-gray-300 hover:bg-gray-400 mt-5 px-2 py-2 rounded self-center text-center w-full lg:w-2/6'\r\n                        onClick={ clearForm }\r\n                    >Clear all</button>\r\n\r\n                    <button \r\n                        type='submit' \r\n                        id='submit' \r\n                        className='bg-green-600 hover:bg-green-700 mt-5 px-2 py-2  rounded self-center text-center text-white w-full lg:w-2/6'\r\n                        onClick={ validateData }\r\n                    >Create post</button>\r\n                </div>\r\n            </form>\r\n\r\n            <p id='help-message' className='bg-orange hidden mt-8 py-2 rounded text-center text-xl text-white w-3/4'>{ helpMessage }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateForm;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useAdminContext } from '../../../../Contexts/AdminContext';\r\nimport { useAdminServices } from '../../../../Services/Admin.services';\r\nimport SessionContext from '../../../../Contexts/SessionContext';\r\nconst EditForm = () => {\r\n    const { postId, setFormState, setPostId, helpMessage, setHelpMessage } = useAdminContext();\r\n    const { authenticated } = useContext(SessionContext);\r\n    const [ data, setData ] = useState({\r\n        title: '',\r\n        description: '',\r\n        image: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getAPost = async () => {\r\n            try {\r\n                const token = authenticated.token;\r\n    \r\n                const response = await useAdminServices.getOnePost( token, postId );\r\n            \r\n                const newData = {\r\n                    title: response.title,\r\n                    description: response.description,\r\n                    image: response.image,\r\n                }\r\n                \r\n                setData( newData );\r\n            } catch ( error ) {\r\n                console.log( error );\r\n            }\r\n        }\r\n\r\n        getAPost();\r\n    }, [ postId ]);\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setData({\r\n            ...data, [ e.target.name ]: e.target.value\r\n        });\r\n    }\r\n\r\n    const validateData = ( e ) => {\r\n        let allOk = true;\r\n\r\n        const { title, description, image } = { ...data };\r\n\r\n        const helpMessageContainer = document.querySelector('#help-message-edit');\r\n        \r\n        if ( title.trim() === '' ) {\r\n            setHelpMessage( 'Debes ingresar un titulo' ); \r\n            allOk = false;\r\n        } else if ( description.trim() === '' ) {\r\n            setHelpMessage( 'Debes ingresar una descripción' );\r\n            allOk = false;\r\n        } else if ( image.trim() === '' ) {\r\n            setHelpMessage( 'Debes ingresar una URL como imagen' ); \r\n            allOk = false;\r\n        } else {\r\n            if( title.trim().length < 8 || title.trim().length > 32 ) {\r\n                setHelpMessage( 'El titulo debe tener entre 8 y 32 caracteres' );\r\n                allOk = false;\r\n            } else if ( description.trim().length < 8 ) {\r\n                setHelpMessage( 'La descripción debe tener como mínimo 8 caracteres' );\r\n                allOk = false;\r\n            }\r\n        }\r\n\r\n        if ( allOk ) {\r\n            const token = authenticated.token;\r\n            editPost( token, postId, title, description, image );\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n            helpMessageContainer.classList.remove('hidden');\r\n\r\n            setTimeout(() => {\r\n                helpMessageContainer.classList.add('hidden');\r\n            }, 3500);\r\n        }\r\n    }\r\n\r\n    const editPost = async ( token, postId, title, description, image ) => {\r\n        try {\r\n            const response = await useAdminServices.updatePost( token, postId, title, description, image );\r\n            \r\n            if( response ) {\r\n                console.log( response );\r\n                setFormState('create'); \r\n                setPostId( undefined );\r\n            } else {\r\n                console.log('Ha ocurrido un error');\r\n            }  \r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='bg-green-600 flex flex-col items-center w-full min-h-690 md:w-1/2 md:h-screen'>\r\n            <form className='bg-gray-100 flex flex-col mt-5 p-5 rounded-lg w-4/5'>\r\n                <h2 className='font-normal font-bold text-center text-3xl'>Edit post</h2>\r\n\r\n                <label htmlFor='title-input' className='mt-2'>Title</label>\r\n                <input \r\n                    type='text' \r\n                    id='title-input' \r\n                    name='title' \r\n                    placeholder='f.e. The benefits of exercise' \r\n                    className='border-2 border-gray-300 mt-1 px-3 py-1 rounded' \r\n                    value={ data.title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <label htmlFor='description-text-area' className='mt-4'>Description</label>\r\n                <textarea \r\n                    id='description-text-area' \r\n                    name='description' \r\n                    cols='40' \r\n                    rows='5' \r\n                    placeholder='f.e. The health benefits of regular physical activity and exercise cannot be ignored. Everyone benefits from exercise, regardless of age, gender, or physical ability' \r\n                    className='border-2 border-gray-300 mt-1 px-3 py-1 rounded'\r\n                    value={ data.description }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <label htmlFor='image-input' className='mt-4'>Image</label>\r\n                <input \r\n                    type='text' \r\n                    id='image-input' \r\n                    name='image' \r\n                    placeholder='f.e. https://health.clevelandclinic.org/wp-content/uploads/sites/3/2013/09/inexpensiveExercise-1277759983-770x533-1.jpg' \r\n                    className='border-2 border-gray-300 mt-1 px-3 py-1 rounded'\r\n                    value={ data.image }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <div className='flex flex-col justify-evenly w-full mt-2 lg:flex-row'>\r\n                    <button \r\n                        id='clear-all' \r\n                        className='bg-gray-300 hover:bg-gray-400 mt-5 px-2 py-2 rounded self-center text-center w-full lg:w-2/6'\r\n                        onClick={ () => { setFormState('create'); setPostId( undefined ) } }\r\n                    >Cancel</button>\r\n\r\n                    <button \r\n                        id='update' \r\n                        className='bg-purple-600 hover:bg-purple-800 mt-5 px-2 py-2  rounded self-center text-center text-white w-full lg:w-2/6'\r\n                        onClick={ validateData }\r\n                    >Edit post</button>\r\n                </div>\r\n            </form>\r\n            \r\n            <p id='help-message-edit' className='bg-orange hidden mt-8 py-2 rounded text-center text-xl text-white w-3/4'>{ helpMessage }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditForm;","import React from 'react';\r\nimport { useAdminContext } from '../../../Contexts/AdminContext';\r\nimport CreateForm from './CreateForm/CreateForm';\r\nimport EditForm from './EditForm/EditForm';\r\n\r\nconst CreateEditForm = () => {\r\n    const { formState } = useAdminContext();\r\n\r\n    if ( formState === 'create' ) {\r\n        return <CreateForm />\r\n    } else {\r\n        return <EditForm />\r\n    }\r\n}\r\n\r\nexport default CreateEditForm;","import React, { useContext } from 'react';\r\nimport { useNavigate } from \"react-router\";\r\nimport SessionContext from \"../../../Contexts/SessionContext\";\r\n\r\nconst Header = () => {\r\n    const { setAuthenticated } = useContext(SessionContext);\r\n    \r\n    let navigate = useNavigate();\r\n    \r\n    const logOut = () => {\r\n        const emptySession = {\r\n            logged: false,\r\n            token: \"\",\r\n        };\r\n    \r\n        setAuthenticated(emptySession);\r\n    \r\n        localStorage.setItem(\"login\", JSON.stringify(emptySession));\r\n    \r\n        navigate(\"/login\");\r\n    };\r\n    return (\r\n        <div className=\"min-w-screen h-20 bg-black flex flex-row justify-end p-6\">\r\n            <button\r\n                onClick={ logOut }\r\n                className='bg-purple-600 hover:bg-purple-800 text-white font-normal font-semibold rounded px-8'\r\n            >Logout</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n\r\n//Since the style may vary from use to use, then is passed as a property\r\nconst Button = ({ localStyle, text = \"\", onClick = () => { }, background, ref }) => {\r\n    return (\r\n        <>\r\n            {background ? (\r\n                <button className={localStyle} onClick={onClick} style={{ backgroundImage: `url(${background})` }} ref={ref}>{text}</button>\r\n\r\n            ) : (\r\n                <button ref={ref} className={localStyle} onClick={onClick} >{text}  </button>\r\n            )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Button;\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst PaginationButton = ( { actionText, onPagination = () => {} } ) => {\r\n    return <button \r\n                onClick={ () => { onPagination(); } }\r\n                className=\"bg-purple-600 hover:bg-purple-800 mx-2 px-4 py-1 rounded text-white text-xl\">{ actionText }\r\n            </button>;\r\n}\r\n\r\nexport default PaginationButton;","import React from 'react';\r\nimport { BiCommentDetail, BiEditAlt, AiOutlineEye } from 'react-icons/all';\r\nimport { useNavigate } from 'react-router';\r\nimport { useAdminContext } from '../../../../../Contexts/AdminContext';\r\n\r\nconst ActivatePost = ( { id, title, toggleActive = () => {} } ) => {\r\n    const { setFormState, setPostId, setClear } = useAdminContext();\r\n    let navigate = useNavigate();\r\n    return (\r\n        <div className='border-2 border-purple-900 flex h-12 items-center justify-between mx-4 mt-5 rounded'>\r\n            <div className='ml-4 w-9/12'>\r\n                <h2 className='font-round text-base'>{ title }</h2>\r\n            </div>\r\n            \r\n            <div className='flex h-full justify-between text-white text-2xl w-3/12 '>\r\n                <div onClick={ () => {navigate(`/posts/${id}`)} }\r\n                    className='bg-blue-500 hover:bg-blue-700 cursor-pointer flex h-full items-center justify-center w-4/12 '>\r\n                    <BiCommentDetail />\r\n                </div>\r\n\r\n                <div onClick={ () => { setFormState( 'edit' ); setPostId( id ); setClear( false ); } }\r\n                    className='bg-yellow-500 hover:bg-yellow-600 cursor-pointer flex h-full justify-center items-center w-4/12'>\r\n                    <BiEditAlt />\r\n                </div>\r\n\r\n                <div onClick={ () => { toggleActive(); } }\r\n                    className='bg-green-600 hover:bg-green-700 cursor-pointer flex h-full items-center justify-center w-4/12'>\r\n                    <AiOutlineEye />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActivatePost;","import React from 'react';\r\nimport { BiCommentDetail, BiEditAlt, AiOutlineEyeInvisible } from 'react-icons/all';\r\nimport { useAdminContext } from '../../../../../Contexts/AdminContext';\r\n\r\nconst DeactivePost = ( { id, title, toggleActive = () => {} } ) => {\r\n    const { setHelpMessage } = useAdminContext();\r\n    const showHelpMessage = () => {\r\n        const helpMessageContainer = document.querySelector('#help-message');\r\n\r\n        setHelpMessage('No puedes editar un post oculto');\r\n        \r\n        helpMessageContainer.classList.remove('hidden');\r\n\r\n        setTimeout(() => {\r\n            helpMessageContainer.classList.add('hidden');\r\n        }, 3500);\r\n    }\r\n\r\n    return (\r\n        <div className='border-2 border-purple-900 flex h-12 items-center justify-between mx-4 mt-5 rounded'>\r\n            <div className='ml-4 w-9/12'>\r\n                <h2 className='font-round text-base'>{ title }</h2>\r\n            </div>\r\n\r\n            <div className='flex h-full justify-between text-white text-2xl w-3/12 '>\r\n                <div onClick={ () => {} }\r\n                    className='bg-blue-500 hover:bg-blue-700 cursor-pointer flex h-full items-center justify-center w-4/12 '>\r\n                    <BiCommentDetail />\r\n                </div>\r\n\r\n                <div onClick={ () => { showHelpMessage(); } }\r\n                    className='bg-yellow-500 hover:bg-yellow-600 cursor-pointer flex h-full justify-center items-center w-4/12'>\r\n                    <BiEditAlt />\r\n                </div>\r\n\r\n                <div onClick={ () => { toggleActive(); } }\r\n                    className='bg-red-500 hover:bg-red-700 cursor-pointer flex h-full items-center justify-center w-4/12'>\r\n                    <AiOutlineEyeInvisible />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default DeactivePost;","import React, {useContext} from 'react';\r\nimport { useAdminContext } from '../../../../Contexts/AdminContext';\r\nimport { useAdminServices } from '../../../../Services/Admin.services';\r\nimport ActivatePost from './ActivatePost/ActivatePost';\r\nimport DeactivePost from './DeactivePost/DeactivePost';\r\nimport SessionContext from '../../../../Contexts/SessionContext';\r\n\r\nconst Post = ( { id, title, active } ) => {\r\n    const { setPostState } = useAdminContext();\r\n    const { authenticated } = useContext(SessionContext);\r\n    const getDate = () => {\r\n        const date = new Date().getTime() / 10;\r\n        return date;\r\n    }\r\n\r\n    const toggleActive = async () => {\r\n        try {\r\n            //const loginInfo = await useAdminServices.tempLogin();\r\n            const token = authenticated.token;\r\n\r\n            const response = await useAdminServices.toggleActive( token, id );\r\n            \r\n            if( response ) {\r\n                console.log( response );\r\n                setPostState( getDate() );\r\n            } else {\r\n                console.log('Ha ocurrido un error');\r\n            }\r\n        } catch ( error ) {\r\n            console.log( error );\r\n        }\r\n    }\r\n\r\n    if ( active ) {\r\n        return <ActivatePost id={id} title={title} toggleActive={toggleActive} />\r\n    } else {\r\n        return <DeactivePost id={id} title={title} toggleActive={toggleActive} />\r\n    }\r\n}\r\n\r\nexport default Post;\r\n","import React, { useState } from 'react';\r\nimport { BiSearchAlt2 } from 'react-icons/all'\r\nimport { useAdminContext } from '../../../../Contexts/AdminContext';\r\nimport { useAdminServices } from '../../../../Services/Admin.services';\r\n\r\nconst SearchBar = ( { searchFunction = () => { }, clearFunction = () => { } } ) => {\r\n    const { setHelpMessage, setClear, page, formState } = useAdminContext();\r\n    const [ search, setSearch ] = useState('');\r\n\r\n    //function created to find one specific post, according to user input\r\n    const searchPost = async ( searchText, setter = () => {} ) => {\r\n        try {\r\n            clearFunction(true); \r\n            setSearch('');\r\n\r\n            //token shall be added when login is incorporated\r\n            //const token = \r\n            let found = false;\r\n\r\n            //number of page to query\r\n            let flagPage = 0;\r\n            let response;\r\n            const loginInfo = await useAdminServices.tempLogin();\r\n\r\n            const token = loginInfo['token'];\r\n\r\n            do {\r\n                response = await useAdminServices.getAdminPosts( token, 100, flagPage );\r\n\r\n                if (!response) {\r\n                    console.log(response['error']);\r\n                }\r\n                else if (response['data'].length == 0) {\r\n                    //If no data came back from the server, we go out of the loop, since we'd gone over everypost\r\n                    const helpMessageContainer = document.querySelector('#help-message');\r\n                    \r\n                    setHelpMessage( 'No se encontró ningún post con ese título' );\r\n                    \r\n                    helpMessageContainer.classList.remove('hidden');\r\n\r\n                    setTimeout(() => {\r\n                        helpMessageContainer.classList.add('hidden');\r\n                    }, 4000);\r\n\r\n                    break;\r\n                }\r\n                else {\r\n                    if (response['data'].some(post => post.title === searchText))\r\n                        found = true;\r\n                    else\r\n                        flagPage += 1;\r\n                }\r\n            } while (found === false);\r\n\r\n            if (found) {   //retriving the post needed \r\n                const searchedPost = response['data'].filter(post => post.title === searchText)\r\n                setter( searchedPost );\r\n            } else {\r\n                setClear( false );\r\n                const response = await useAdminServices.getAdminPosts( token, 10, page );\r\n                setter( response['data'] );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const validateFormStatus = () => {\r\n        if ( formState === 'edit' ) {\r\n            setSearch('');\r\n            const helpMessageContainer = document.querySelector('#help-message');\r\n            setHelpMessage( 'No puedes buscar un post mientras estás editando otro' );\r\n            helpMessageContainer.classList.remove('hidden');\r\n                    \r\n            setTimeout(() => {\r\n                helpMessageContainer.classList.add('hidden');\r\n            }, 4000);\r\n        } else {\r\n            searchPost( search, searchFunction );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='flex justify-center mt-5'>\r\n            <input \r\n                type='text' \r\n                placeholder='Search a post by its title here' \r\n                className='border-2 border-gray-300 font-normal px-3 py-1 rounded-l-lg text-base w-1/2'\r\n                onChange={ (e) => { setSearch(e.target.value) } }\r\n                value={ search }\r\n            />\r\n            <div \r\n                onClick={ (e) => { e.preventDefault(); validateFormStatus();  } }\r\n                className='bg-purple-600 hover:bg-purple-800 border-2 border-gray-400 cursor-pointer flex items-center justify-center px-3 py-1 rounded-r-lg text-lg text-white'>\r\n                <BiSearchAlt2 />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useAdminContext } from '../../../Contexts/AdminContext';\r\nimport SessionContext from '../../../Contexts/SessionContext';\r\nimport { useAdminServices } from '../../../Services/Admin.services';\r\nimport Button from '../../Button/Button';\r\nimport PaginationButton from './PaginationButton/PaginationButton';\r\nimport Post from './Post/Post';\r\nimport SearchBar from './SearchBar/SearchBar';\r\n\r\nconst PostViewer = () => {\r\n    const { formState, postState, clear, setClear, page, setPage } = useAdminContext();\r\n    const [ adminPosts, setAdminPosts ] = useState([]);\r\n    const { authenticated } = useContext(SessionContext);\r\n\r\n    useEffect(() => {\r\n        const fetchAdminPosts = async () => {\r\n            try {\r\n                const token = authenticated.token;\r\n\r\n                const response = await useAdminServices.getAdminPosts( token, 10, page );\r\n\r\n                setAdminPosts( response['data'] );\r\n            } catch (error) {\r\n                console.log(error);\r\n            };\r\n        }\r\n\r\n        fetchAdminPosts();\r\n    }, [ page, formState, postState, clear ]);\r\n\r\n    const onPrevPagination = () => {\r\n        let newPage = page;\r\n        \r\n        if ( newPage === 0 ) {\r\n            return;\r\n        } else {\r\n            newPage -= 1;\r\n            setPage( newPage );\r\n        }\r\n    }\r\n\r\n    const onNextPagination = () => {\r\n        let newPage = page;\r\n        \r\n        newPage += 1;\r\n        setPage( newPage );\r\n    }\r\n\r\n    return (\r\n        <div className='flex flex-col w-full md:w-1/2'>\r\n            <SearchBar searchFunction={ setAdminPosts } clearFunction={ setClear } />\r\n            \r\n            { adminPosts.map(post => {\r\n                return <Post\r\n                key={post._id}\r\n                id={post._id}\r\n                title={post.title} \r\n                active={post.active} />\r\n            })}\r\n\r\n            \r\n            {clear && \r\n                (\r\n                    <div className='flex items-center justify-center mb-8 mt-6'>\r\n                        <Button\r\n                            localStyle='bg-pink-500 hover:bg-pink-700 mx-2 px-4 py-1 rounded text-white text-xl'\r\n                            text='Clear search'\r\n                            onClick={(e) => { e.preventDefault(); setPage(0); setClear(false) }} \r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            {!clear &&\r\n                (\r\n                    <div className='flex items-center justify-center mb-8 mt-6'>\r\n                        <PaginationButton actionText='Previous' onPagination={ onPrevPagination }/>\r\n                        <PaginationButton actionText='Next' onPagination={ onNextPagination }/>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostViewer;","import React, { useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { AdminProvider } from '../../Contexts/AdminContext';\r\nimport SessionContext from '../../Contexts/SessionContext';\r\nimport CreateEditForm from './CreateEditForm/CreateEditForm';\r\nimport Header from './Header/Header';\r\nimport PostViewer from './PostViewer/PostViewer';\r\n\r\nconst Admin = () => {\r\n    const {authenticated} = useContext(SessionContext);\r\n    let navigate = useNavigate();\r\n    useEffect(()=>{\r\n        if(!authenticated.logged){\r\n            navigate(\"/\");\r\n        }\r\n    },[])\r\n    return (\r\n        <AdminProvider>\r\n            <Header />\r\n            <div className='flex flex-col h-screen md:flex-row'>\r\n                <CreateEditForm />\r\n                <PostViewer />\r\n            </div>  \r\n        </AdminProvider>\r\n    );\r\n}\r\n\r\nexport default Admin;","import React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Button from \"../../Button/Button\"\r\n\r\n\r\n\r\nconst Card = ({ id=\"\", title = \"\", image = \"\" }) => {\r\n    let navigate = useNavigate();\r\n    //remember to change the width of the card to full once you start to produce them with the images\r\n    return (\r\n        <>\r\n            <div className=\" group w-80 h-80 lg:w-60 lg:h-60  m-4 rounded-xl shadow-lg  bg-cover  \" style={{ backgroundImage: `url(${image})` }}>\r\n                <div className=\"  w-full h-full rounded-xl flex flex-col justify-center  justify-items-center place-content-center gap-4 backdrop-filter group-hover:backdrop-blur-lg transition ease-in duration-500\">\r\n                    <p className=\"text-center m-4 md:m-8 invisible group-hover:visible font-normal font-semibold text-purple-400  overflow-x-hidden\">{title}</p>\r\n                    <Button onClick={() => {navigate(`/posts/${id}`)}} localStyle=\"h-8 rounded-xl invisible group-hover:visible transition bg-purple-400 m-8 text-white font-bold \" text=\"See More\" />\r\n                </div>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","\r\n\r\n//function to get only the info needed for the post in home\r\nexport const homePost = (postInfo) => {\r\n    if (!postInfo)\r\n        return null;\r\n\r\n    return {\r\n        id: postInfo._id,\r\n        title: postInfo.title,\r\n        image: postInfo.image\r\n    }\r\n}","// url for getting all the posts \r\nimport { homePost } from \"./utilites\"\r\nconst BASE_URL = 'https://posts-pw2021.herokuapp.com/api/v1/post/all'\r\nconst ONE_URL = 'https://posts-pw2021.herokuapp.com/api/v1/post/one/';\r\nconst FAV = 'https://posts-pw2021.herokuapp.com/api/v1/post/fav';\r\n\r\n\r\n\r\nconst services = {};\r\n\r\nservices.getPosts = async (token, limit = 10, page = 0) => {\r\n    try {\r\n        //getting the posts from the api\r\n        const request = await fetch(`${BASE_URL}?limit=${limit}&page=${page}`, {\r\n            headers: {\r\n                //Header with the auth for accesing the post\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n            method: \"GET\", //defining the method\r\n\r\n        })\r\n\r\n        //chekgin if response returned withoud problems\r\n        const response = await request.json();\r\n        if (request.ok) {\r\n\r\n            const simplyfiedData = response['data'].map(homePost);\r\n            return { response: true, data: simplyfiedData, pages: response['pages'] };\r\n        }\r\n\r\n\r\n        return { response: false, data: null }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nservices.getFavorites = async (token) => {\r\n    try {\r\n        //getting the posts from the api\r\n        const request = await fetch(`${FAV}`, {\r\n            headers: {\r\n                //Header with the auth for accesing the post\r\n                \"Authorization\": `Bearer ${token}`\r\n            },\r\n            method: \"GET\", //defining the method\r\n\r\n        })\r\n\r\n        //chekgin if response returned withoud problems\r\n        const response = await request.json();\r\n\r\n        if (request.ok) {\r\n\r\n            const favorites = response['favorites'];\r\n            let favPosts = [];\r\n            for (let i = 0; i < favorites.length; i++) {\r\n                let temp = await services.getOnePost(favorites[i], token)\r\n                favPosts.push(temp['data']);\r\n\r\n            }\r\n\r\n    \r\n\r\n            console.log(favPosts)\r\n            return { response: true, data: favPosts };\r\n        }\r\n\r\n\r\n        return { response: false, data: null }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n\r\nservices.getOnePost = async (id, token) => {\r\n    const request = await fetch(`${ONE_URL}${id}`, {\r\n        headers: {\r\n            //Header with the auth for accesing the post\r\n            \"Authorization\": `Bearer ${token}`\r\n        },\r\n        method: \"GET\", //defining the method\r\n\r\n    })\r\n\r\n    const response = await request.json();\r\n    if (request.ok) {\r\n        const simplyfiedData = await homePost(response);\r\n        return { response: true, data: simplyfiedData };\r\n    }\r\n\r\n    return { response: false, data: null }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default services;","export default __webpack_public_path__ + \"static/media/Search.e17167c4.svg\";","import { React, useState, useEffect, useContext } from 'react';\r\nimport Button from '../../Button/Button';\r\nimport postsServices from '../../../Services/posts.services'\r\nimport SearchIcon from '../../../Assets/Search.svg'\r\nimport SessionContext from '../../../Contexts/SessionContext';\r\n\r\n\r\nconst SearchBar = ({ searchFunction = () => { }, clearFunction = () => { }, loading = () => { } }) => {\r\n    const [search, SetSearch] = useState(\"\");\r\n    const { authenticated } = useContext(SessionContext);\r\n\r\n    useEffect(() => {\r\n        console.log(search);\r\n    }, [search])\r\n\r\n    //function created to find one specific post, according to user input\r\n    const searchPost = async (searchText, setter = () => { }) => {\r\n\r\n        try {\r\n            //token shall be added when login is incorporated\r\n            //const token = \r\n            let found = false;\r\n\r\n            //number of page to query\r\n            let page = 0;\r\n            let response;\r\n            //const loginInfo = await postsServices.tempLogin();\r\n\r\n            const token = authenticated.token;\r\n\r\n            do {\r\n\r\n                response = await postsServices.getPosts(token, 100, page)\r\n\r\n                if (!response[\"response\"]) {\r\n                    console.log(response['error']);\r\n\r\n                }\r\n                else if (response['data'].length === 0) {\r\n                    //If no data came back from the server, we go out of the loop, since we'd gone over everypost\r\n                    break;\r\n                }\r\n                else {\r\n\r\n                    if (response['data'].some(post => post.title === searchText)) {\r\n                        found = true;\r\n\r\n                    }\r\n                    else\r\n                        page += 1;\r\n\r\n\r\n\r\n                }\r\n            } while (found === false);\r\n\r\n\r\n            if (found) {   //retriving the post needed \r\n                const searchedPost = response['data'].filter(post => post.title === searchText);\r\n\r\n                setter(searchedPost)\r\n\r\n            }\r\n            else {\r\n                console.log(\"error: Data not found\")\r\n                //return [];\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"flex  flex-col flex-wrap justify-center justify-items-center content-evenly \">\r\n            <div className=\"w-1/2  h-18 bg-loginpattern  p-4 rounded-xl shadow-lg   \">\r\n                <form action=\"\" className=\"w-auto h-auto flex flex-row flex-wrap justify-center justify-items-center content-evenly\">\r\n                    <input type=\"text\" className=\"w-2/3 h-12 bg-purple-300  rounded-xl mr-2  my-2 font-normal p-4 text-center  u-sm:h-12\" onChange={(e) => { SetSearch(e.target.value) }} value={search} />\r\n                    <Button localStyle=\"w-12 h-12  ml-4 my-2\" background={SearchIcon} onClick={(e) => { e.preventDefault(); searchPost(search, searchFunction); clearFunction(true); SetSearch(\"\") }} />\r\n\r\n                </form>\r\n            </div >\r\n        </div>\r\n    )\r\n}\r\n\r\n//<button className=\"w-12 h-12  ml-4 my-2\" style={{ backgroundImage: `url(${SearchIcon})` }}  name=\"Send\"></button>\r\nexport default SearchBar;\r\n\r\n\r\n\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { GrFavorite } from \"react-icons/gr\";\r\nimport { useNavigate } from \"react-router\";\r\nimport SessionContext from \"../../../Contexts/SessionContext\";\r\nimport Button from \"../../Button/Button\";\r\n\r\nconst Menu = ({ fav = false }) => {\r\n  const { setAuthenticated } = useContext(SessionContext);\r\n  let navigate = useNavigate();\r\n  const logOut = () => {\r\n    const emptySession = {\r\n      logged: false,\r\n      token: \"\",\r\n    };\r\n    setAuthenticated(emptySession);\r\n    localStorage.setItem(\"login\", JSON.stringify(emptySession));\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const Favorites = () => {\r\n    navigate(\"/favorites\");\r\n  }\r\n  const Home = () => {\r\n    navigate(\"/home\");\r\n  }\r\n\r\n\r\n  if (fav === true) {\r\n    return (\r\n      <div className=\"min-w-screen h-24 bg-loginpattern flex flex-row justify-center sm:justify-end p-6  u-sm:mb-10 p-6  \">\r\n\r\n        <Button\r\n          onClick={Favorites}\r\n          localStyle=\"bg-pink-500 text-white font-normal font-semibold p-2 w-32 mr-24\"\r\n          text=\"Favorites\"\r\n        />\r\n\r\n        <Button\r\n          onClick={logOut}\r\n          localStyle=\"bg-pink-500 text-white font-normal font-semibold p-2 w-32 mr-4\"\r\n          text=\"Logout\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"min-w-screen h-24  bg-loginpattern flex flex-row justify-center sm:justify-end p-6  u-sm:mb-10 p-6  \">\r\n\r\n        <Button\r\n          onClick={Home}\r\n          localStyle=\"bg-pink-500 text-white font-normal font-semibold p-2 w-32 mr-24\"\r\n          text=\"Home\"\r\n        />\r\n\r\n        <Button\r\n          onClick={logOut}\r\n          localStyle=\"bg-pink-500 text-white font-normal font-semibold p-2 w-32 \"\r\n          text=\"Logout\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Menu;\r\n","import { React, useState, useEffect, useContext } from 'react';\r\nimport Card from './Card/Card'\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport Menu from './Menu/Menu';\r\nimport Button from '../Button/Button';\r\nimport PostNotExists from \"../../Static/PostNotExists\";\r\n\r\nimport postsServices from '../../Services/posts.services'\r\nimport SessionContext from '../../Contexts/SessionContext';\r\nimport { useNavigate } from 'react-router';\r\nimport AuthHelper from '../../Services/AuthHelper';\r\nimport LoadingScreen from '../../Static/LoadingScreen';\r\n\r\n\r\n\r\n\r\n//Container component, only purpose is to keep in order all the mess inside\r\n\r\nconst Container = () => {\r\n    const [posts, SetPosts] = useState([]);\r\n    const [page, SetPage] = useState(0);\r\n    const [clear, SetClear] = useState(false);\r\n    const [limit] = useState(15);\r\n    const { authenticated } = useContext(SessionContext);\r\n    let navigate = useNavigate();\r\n    const [content, setContent] = useState(<div></div>);\r\n    const [postLoaded, setPostLoaded] = useState(false);\r\n\r\n    const loading = <LoadingScreen />;\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!authenticated.logged) {\r\n                navigate(\"/\");\r\n            }\r\n            else {\r\n                let user = await AuthHelper.whoami(authenticated.token);\r\n                if (user.role === \"admin\") {\r\n                    navigate(\"/admin\");\r\n                }\r\n            }\r\n        })();\r\n        // const fetchPosts = async () => {\r\n\r\n        // }\r\n        const token = authenticated.token;\r\n        if (!postLoaded) {\r\n            (async () => {\r\n                try {\r\n\r\n\r\n                    const response = await postsServices.getPosts(token, limit, page);\r\n                    if (!response[\"response\"]) {\r\n                        console.log(response['error']);\r\n                    }\r\n                    else {\r\n                        //checking that the data has been loaded correctly\r\n                        if (response.response) {\r\n                            if (response['data'].length === 0)\r\n                                SetPage(0)\r\n                            else\r\n                                SetPosts(response['data']);\r\n                        }\r\n                        else {\r\n                            setContent(<PostNotExists />);\r\n                        }\r\n\r\n                        setPostLoaded(true);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                };\r\n            })();\r\n        }\r\n\r\n    }, [page, clear, postLoaded]);\r\n\r\n\r\n\r\n    //function that determines the new offset for the page  \r\n    const changeOffset = (amount, sign) => {\r\n\r\n        if (sign) {\r\n            return amount + 1\r\n        }\r\n        else {\r\n            if (amount === 0)\r\n                return amount;\r\n            else\r\n                return amount = amount - 1;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (<>{postLoaded ? (<main className=\" min-w-screen min-h-screen m-0 flex flex-col flex-wrap justify-center justify-items-center content-evenly \">\r\n        <Menu fav={true} />\r\n        <SearchBar searchFunction={SetPosts} clearFunction={SetClear} />\r\n        <div className=\"min-w-screen   flex flex-row flex-wrap justify-center justify-items-center content-evenly p-20 \">\r\n\r\n\r\n            {posts.map((post) => {\r\n                return <Card id={post.id} title={post.title} key={post.id} image={post.image} />\r\n            })}\r\n\r\n        </div>\r\n        <div className=\"w-full h-40 flex flex-row justify-center justify-items-center content-evenly \">\r\n\r\n\r\n            {clear &&\r\n                (<Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Clear\" onClick={(e) => { e.preventDefault(); SetPage(0); SetClear(false); setPostLoaded(false); }} />)}\r\n            {!clear &&\r\n                (<>\r\n                    <Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Previous\" onClick={(e) => { e.preventDefault(); SetPage(changeOffset(page, false)); setPostLoaded(false) }} />\r\n                    <Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Next\" onClick={(e) => { e.preventDefault(); SetPage(changeOffset(page, true)); setPostLoaded(false) }} />\r\n                </>)}\r\n        </div>\r\n        <div className=\"min-w-screen h-24 bg-loginpattern flex flex-row justify-end p-6\">\r\n\r\n        </div>\r\n    </main >) : loading}</>);\r\n}\r\n\r\nexport default Container;","import { React, useState, useEffect, useContext } from 'react';\r\nimport Card from './Card/Card'\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport Menu from './Menu/Menu';\r\nimport Button from '../Button/Button';\r\nimport PostNotExists from \"../../Static/PostNotExists\";\r\n\r\nimport postsServices from '../../Services/posts.services'\r\nimport SessionContext from '../../Contexts/SessionContext';\r\nimport { useNavigate } from 'react-router';\r\nimport AuthHelper from '../../Services/AuthHelper';\r\nimport LoadingScreen from '../../Static/LoadingScreen';\r\nimport { useInfiniteLoading } from '../../CustomHooks/InfiniteLoading'\r\n\r\n\r\n\r\n\r\n\r\n//Container component, only purpose is to keep in order all the mess inside\r\n\r\nconst Container = () => {\r\n    const [posts, SetPosts] = useState([]);\r\n    const [page, SetPage] = useState(0);\r\n    const [clear, SetClear] = useState(false);\r\n    const { authenticated } = useContext(SessionContext);\r\n    let navigate = useNavigate();\r\n    const [content, setContent] = useState(<div></div>);\r\n    const [postLoaded, setPostLoaded] = useState(false);\r\n\r\n\r\n    const loading = <LoadingScreen />;\r\n    const token = authenticated.token;\r\n    const [limit, SetLimit] = useState(15);\r\n    const { loadMoreRef, items, hasMore, loadItems, loadNext, rendered } = useInfiniteLoading({ prevItems: posts, getter: postsServices.getPosts, token: token, limit: limit, page: page })\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        (async () => {\r\n            if (!authenticated.logged) {\r\n                navigate(\"/\");\r\n            }\r\n            else {\r\n                let user = await AuthHelper.whoami(authenticated.token);\r\n                if (user.role === \"admin\") {\r\n                    navigate(\"/admin\");\r\n                }\r\n            }\r\n        })();\r\n\r\n        if (clear && !postLoaded) {\r\n            console.log(\"Esto era\")\r\n        }\r\n\r\n        if (!postLoaded) {\r\n            (async () => {\r\n                try {\r\n                    (async () => {\r\n                        const response = await postsServices.getPosts(token, limit, page);\r\n                        if (!response[\"response\"]) {\r\n                            console.log(response['error']);\r\n                        }\r\n                        else {\r\n                            //checking that the data has been loaded correctly\r\n                            if (response.response) {\r\n                                if (response['data'].length === 0)\r\n                                    SetPage(0)\r\n                                else\r\n                                    SetPosts(response['data']);\r\n                            }\r\n                            else {\r\n                                setContent(<PostNotExists />);\r\n                            }\r\n\r\n                            setPostLoaded(true);\r\n                        }\r\n                    })();\r\n                } catch (error) {\r\n                    console.log(error)\r\n                };\r\n            })();\r\n        }\r\n\r\n\r\n        if (hasMore && rendered && !clear) {\r\n            SetPosts(items);\r\n            setPostLoaded(true);\r\n        }\r\n\r\n\r\n\r\n    }, [loadItems, postLoaded, clear]);\r\n\r\n    return (<>{postLoaded ? (\r\n        <main className=\" min-w-screen min-h-screen m-0 flex flex-col flex-wrap justify-center justify-items-center content-evenly \">\r\n            <Menu />\r\n            <SearchBar searchFunction={SetPosts} clearFunction={SetClear} loading={() => { setPostLoaded() }} />\r\n            <div className=\"min-w-screen  flex flex-row flex-wrap justify-center justify-items-center content-evenly p-20\">\r\n                {posts.map((post) => {\r\n                    return <Card id={post.id} title={post.title} key={post.id} image={post.image} />\r\n                })}\r\n\r\n            </div>\r\n            <div className=\"w-full h-40 flex flex-row justify-center justify-items-center sm:content-evenly \">\r\n\r\n                {clear &&\r\n                    (<Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Clear\" onClick={(e) => { e.preventDefault(); SetPage(0); SetClear(false); setPostLoaded(false); }} />)}\r\n                {!clear && hasMore &&\r\n                    (<>\r\n                        <button ref={loadMoreRef} className={\"\"} onClick={() => { loadNext(); }} ></button>\r\n                    </>)}\r\n            </div>\r\n            <div className=\"min-w-screen h-24 bg-loginpattern flex flex-row justify-end p-6\">\r\n\r\n            </div>\r\n        </main >) : loading}</>);\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Container;","import { useState, useEffect, useRef } from \"react\";\r\nimport useInView from \"react-cool-inview\";\r\n\r\n\r\n//Component created to add an infinite loading for mobile formatting \r\nexport const useInfiniteLoading = ({ prevItems = [], getter = () => { }, token, limit = 10, page = 0 }) => {\r\n\r\n    const getItems = getter;\r\n    const [items, SetItems] = useState([]);\r\n    const pageToLoad = useRef(page);\r\n    //creates a mutable state\r\n    const initialPageLoaded = useRef(false);\r\n    const [hasMore, SetHasMore] = useState(true);\r\n    const [rendered, SetRendered] = useState(false)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const loadItems = async (actualPage) => {\r\n        try {\r\n            const response = await getItems(token, limit, actualPage);\r\n\r\n\r\n            const data = response['data'];\r\n            SetHasMore(response['pages'] > pageToLoad.current);\r\n            SetRendered(true);\r\n            if (Array.isArray(items))\r\n                SetItems(prevItems => [...prevItems, ...data]);\r\n            else\r\n                SetItems(data)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    const loadNext = () => {\r\n        pageToLoad.current = Number(pageToLoad.current) + 1;\r\n        loadItems(pageToLoad.current);\r\n    }\r\n\r\n    //Observer to load automatically the next batch of posts\r\n    const { observe } = useInView({\r\n        onEnter: () => {\r\n            loadNext()\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (initialPageLoaded.current)\r\n            return;\r\n\r\n        loadItems();\r\n        initialPageLoaded.current = true;\r\n    }, [loadItems]);\r\n\r\n\r\n\r\n\r\n\r\n    return {\r\n        items,\r\n        hasMore,\r\n        loadItems,\r\n        loadNext,\r\n        rendered,\r\n        loadMoreRef: observe\r\n    };\r\n\r\n}\r\n\r\n","import { React, useState, useEffect, useContext } from 'react';\r\nimport Card from '../Card/Card'\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport Menu from '../Menu/Menu';\r\nimport Button from '../../Button/Button';\r\nimport PostNotExists from \"../../../Static/PostNotExists\";\r\n\r\nimport postsServices from '../../../Services/posts.services'\r\nimport SessionContext from '../../../Contexts/SessionContext';\r\nimport { useNavigate } from 'react-router';\r\nimport AuthHelper from '../../../Services/AuthHelper';\r\nimport LoadingScreen from '../../../Static/LoadingScreen';\r\n\r\n\r\n\r\n\r\n//Container component for favorites, only purpose is to keep in order all the mess inside\r\n\r\nconst Favorites = () => {\r\n    const [posts, SetPosts] = useState([]);\r\n    const [page, SetPage] = useState(0);\r\n    const [clear, SetClear] = useState(false);\r\n    const [limit] = useState(15);\r\n    const { authenticated } = useContext(SessionContext);\r\n    let navigate = useNavigate();\r\n    const [content, setContent] = useState(<div></div>);\r\n    const [postLoaded, setPostLoaded] = useState(false);\r\n\r\n    const loading = <LoadingScreen />;\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (!authenticated.logged) {\r\n                navigate(\"/\");\r\n            }\r\n            else {\r\n                let user = await AuthHelper.whoami(authenticated.token);\r\n                if (user.role === \"admin\") {\r\n                    navigate(\"/admin\");\r\n                }\r\n            }\r\n        })();\r\n\r\n        const token = authenticated.token;\r\n\r\n\r\n        if (!postLoaded) {\r\n            (async () => {\r\n                try {\r\n\r\n\r\n                    const response = await postsServices.getFavorites(token);\r\n\r\n                    if (!response[\"response\"]) {\r\n                        console.log(response['error']);\r\n                    }\r\n                    else {\r\n                        //checking that the data has been loaded correctly\r\n\r\n                        if (response.response) {\r\n                            if (response['data'].length === 0)\r\n                                SetPage(0)\r\n                            else\r\n                                SetPosts(response['data']);\r\n                        }\r\n                        else {\r\n                            setContent(<PostNotExists />);\r\n                        }\r\n\r\n                        setPostLoaded(true);\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                };\r\n            })();\r\n        }\r\n\r\n    }, [page, clear, postLoaded]);\r\n\r\n\r\n\r\n    //function that determines the new offset for the page  \r\n    const changeOffset = (amount, sign) => {\r\n\r\n        if (sign) {\r\n            return amount + 1\r\n        }\r\n        else {\r\n            if (amount === 0)\r\n                return amount;\r\n            else\r\n                return amount = amount - 1;\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (<>{postLoaded ? (<main className=\" min-w-screen min-h-screen m-0 flex flex-col flex-wrap justify-center justify-items-center content-evenly \">\r\n        <Menu fav={false} />\r\n        <SearchBar searchFunction={SetPosts} clearFunction={SetClear} />\r\n        <div className=\"min-w-screen   flex flex-row flex-wrap justify-center justify-items-center content-evenly p-20 \">\r\n\r\n\r\n            {posts.map((post) => {\r\n                return <Card id={post.id} title={post.title} key={post.id} image={post.image} />\r\n            })}\r\n\r\n        </div>\r\n        <div className=\"w-full h-40 flex flex-row justify-center justify-items-center content-evenly \">\r\n\r\n\r\n            {clear &&\r\n                (<Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Clear\" onClick={(e) => { e.preventDefault(); SetPage(0); SetClear(false); setPostLoaded(false); }} />)}\r\n            {!clear &&\r\n                (<>\r\n                    <Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Previous\" onClick={(e) => { e.preventDefault(); SetPage(changeOffset(page, false)); setPostLoaded(false) }} />\r\n                    <Button localStyle=\"w-40 h-10 bg-pink-500 m-6 font-normal text-white rounded-md\" text=\"Next\" onClick={(e) => { e.preventDefault(); SetPage(changeOffset(page, true)); setPostLoaded(false) }} />\r\n                </>)}\r\n        </div>\r\n        <div className=\"min-w-screen h-24 bg-loginpattern flex flex-row justify-end p-6\">\r\n\r\n        </div>\r\n    </main >) : loading}</>);\r\n}\r\n\r\nexport default Favorites;","import { React, useState, useEffect } from 'react';\r\n\r\n\r\n//Custom Hook created for rendering different components on resize\r\nfunction useResize() {\r\n    const [width, SetWidth] = useState(window.innerWidth);\r\n    const [height, SetHeight] = useState(window.innerHeight);\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            SetHeight(window.innerHeight);\r\n            SetWidth(window.innerWidth);\r\n        })\r\n\r\n        //Cleaning up the event\r\n        return () => {\r\n            window.removeEventListener('resize', () => {\r\n                SetHeight(window.innerHeight);\r\n                SetWidth(window.innerWidth);\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    //returning the current height and width\r\n    return [height, width];\r\n\r\n\r\n}\r\n\r\nexport default useResize;\r\n\r\n","import { React, useContext, useEffect } from \"react\";\r\nimport SessionContext from '../../Contexts/SessionContext';\r\nimport { renderMatches, useNavigate } from 'react-router';\r\nimport AuthHelper from '../../Services/AuthHelper';\r\nimport useResize from \"../../CustomHooks/ResizeHook\";\r\n\r\n\r\nconst Crossroad = () => {\r\n    const [height, width] = useResize();\r\n    const breakpointMobile = 768;\r\n    const { authenticated } = useContext(SessionContext);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const redirect = async () => {\r\n            if (!authenticated.logged) {\r\n                navigate(\"/\");\r\n            }\r\n            else {\r\n                let user = await AuthHelper.whoami(authenticated.token);\r\n                if (user.role === \"admin\") {\r\n                    navigate(\"/admin\");\r\n                }\r\n                else if (user.role === \"user\") {\r\n                    //Chencking which site to load, if mobile or desktop\r\n                    if (width >= breakpointMobile)\r\n                        navigate(\"/main\");\r\n                    else\r\n                        navigate(\"/mobile\");\r\n                }\r\n            }\r\n        };\r\n\r\n        redirect()\r\n    }, [])\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport default Crossroad;","import \"./App.css\";\r\nimport \"./index.css\";\r\nimport LoginContainer from \"./Components/LoginContainer/LoginContainer\";\r\nimport { useState } from \"react\";\r\nimport { Route, Routes, HashRouter } from \"react-router-dom\";\r\nimport NotFound from \"./Static/NotFound\";\r\nimport SessionContext from \"./Contexts/SessionContext\";\r\nimport PostViewer from \"./Components/PostViewer/PostViewer\";\r\nimport Admin from './Components/Admin/Admin';\r\nimport Container from \"./Components/Container/Container\";\r\nimport ContainerMobile from './Components/Container/ContainerMobile'\r\nimport Favorites from './Components/Container/Favorites/Favorites'\r\n\r\nimport Crossroad from \"./Components/Crossroad/Crossroad\";\r\n\r\nfunction App() {\r\n  const [authenticated, setAuthenticated] = useState(localStorage.login != null ? JSON.parse(localStorage.login) : {});\r\n  return (\r\n    <SessionContext.Provider value={{ authenticated, setAuthenticated }}>\r\n      <HashRouter>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<LoginContainer />} />\r\n          <Route path=\"/login\" element={<LoginContainer />} />\r\n          <Route path=\"/home\" element={<Crossroad />} />\r\n          <Route path=\"/main\" element={<Container />} />\r\n          <Route path=\"/admin\" element={<Admin />} />\r\n          <Route path=\"/posts/:id\" element={<PostViewer />} />\r\n          <Route path=\"*\" element={<NotFound />} />\r\n          <Route path=\"/mobile\" element={<ContainerMobile />} />\r\n          <Route path=\"/favorites\" element={<Favorites />} />\r\n        </Routes>\r\n      </HashRouter>\r\n    </SessionContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}